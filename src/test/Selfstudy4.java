package test;

public class Selfstudy4 {
	public static void main(String[] args) {
//		System.out.println("練習");
		
		//スッキリわかるJava入門　読書中。。。
		
		//第1章 完了
		
		第2章
		式と演算子
		
		int a = 10;
		int b = a++;
		a = 10;
		int c = ++a;
		System.out.println("変数bの値は" + b);
		System.out.println("変数cの値は" + c);
		

		このコードは、Javaのインクリメント演算子（`++`）の使い方を示しています。
		インクリメント演算子には、前置き（`++a`）と後置き（`a++`）の2つの形式があり、
		それぞれ挙動が異なります。

		- **後置きインクリメント**（`a++`）: 変数の現在の値を使用または評価した後に、
		その変数の値を1増加させます。
		- **前置きインクリメント**（`++a`）: 変数の値を先に1増加させてから、
		その結果の値を使用または評価します。

		このコードを解析してみましょう：

		1. `int a = 10;` - 変数`a`を10で初期化します。
		2. `int b = a++;` - 変数`b`に`a`の現在の値（10）を代入した後で、
		`a`の値を1増加させます。したがって、`b`の値は10になり、この行の実行後に`a`は11になります。
		3. `a = 10;` - 変数`a`の値を10に再設定します。
		4. `int c = ++a;` - `a`の値を先に1増加させ（これにより`a`は11になります）、
		その結果の値（11）を変数`c`に代入します。

		したがって、最終的な出力は次のようになります：

		```
		変数bの値は10
		変数cの値は11
		```

		これは、後置きインクリメントが値を代入した後に増加させるのに対し、
		前置きインクリメントは値を増加させてから代入することを示しています。
		
		この問題もう一度復習したい。
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	}
}