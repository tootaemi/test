package test;

public class JavaSilverSE11_1 {
	public static void main(String[] args) {
		System.out.println("Hello, world!");
		
//		第7章
//		クラスの継承、インターフェース、抽象クラス
//		・クラスの継承
//		・インターフェース
//		・抽象クラスと具象クラス
//		・抽象メソッドの実装
//		・メソッドのオーバーライド
//		・ポリモーフィズム
//		・型の互換性、アップキャスト、ダウンキャスト
//		・thisの使用
//		・superの使用
		
		
		//1.
//		public class Child extends Parent {
//			Child() {
//				name = "Java";
//			}
//			void hello() {
//				System.out.println("hello, " + name);
//			}
//		}
		
		//このクラスが継承しているParentクラスの説明として正しいもの
		//⇨
		//Parentクラスには、nameフィールドを定義しなければいけない。
//		
//		クラスの継承に関する問題。
//		継承は、あるクラスを機能拡張した新しいクラスを定義すること。
//		拡張元になるクラスのことを基底クラスやスーパークラス、
//		拡張したクラスのことを派生クラスやサブクラスと呼ぶ。
//		
//		継承は生産性を向上させる強力なプログラミング手法。
//		共通部分のプログラム⇨差分プログラミングと呼ぶ。
////		
//		！　継承をすることでサブクラスはスーパークラスの特徴を引き継ぎます。
//		サブクラスのインスタンスは、スーパークラスのインスタンスと
//		差分のインスタンスの両方で構成されていることを理解しよう。
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	}
}